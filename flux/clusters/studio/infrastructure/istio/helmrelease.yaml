---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: istio-base
  namespace: istio-system
spec:
  interval: 5m
  timeout: 10m
  chart:
    spec:
      chart: base
      version: 1.20.0
      sourceRef:
        kind: HelmRepository
        name: istio
        namespace: flux-system
  values:
    # 🔧 Istio Base Configuration
    # 🎯 Minimal configuration for blue/green deployments
    
    # Global Configuration
    global:
      # 🔐 Security Configuration
      mtls:
        enabled: true
        mode: STRICT
      
      # 🏷️ Default Labels
      defaultLabels:
        app.kubernetes.io/name: istio
        app.kubernetes.io/part-of: istio
      
      # 🔍 Proxy Configuration
      proxy:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      
      # 📊 Default Resources
      defaultResources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
    
    # 🔐 Security Configuration
    security:
      enabled: true
      selfSigned: true
    
    # 🚦 Pilot Configuration
    pilot:
      enabled: true
      autoscaleEnabled: true
      autoscaleMin: 1
      autoscaleMax: 3
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 200m
          memory: 512Mi
      configSource:
        subscribedResources:
        - "kind:VirtualService"
        - "kind:DestinationRule"
        - "kind:Gateway"
        - "kind:ServiceEntry"
    
    # 🌐 Gateway Configuration
    gateways:
      istio-ingressgateway:
        enabled: true
        autoscaleEnabled: true
        autoscaleMin: 1
        autoscaleMax: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        ports:
        - name: http2
          port: 80
          targetPort: 8080
        - name: https
          port: 443
          targetPort: 8443
        - name: tcp
          port: 31400
          targetPort: 31400
        - name: tls
          port: 15443
          targetPort: 15443
        service:
          type: LoadBalancer
          ports:
          - name: http2
            port: 80
            targetPort: 8080
          - name: https
            port: 443
            targetPort: 8443
          - name: tcp
            port: 31400
            targetPort: 31400
          - name: tls
            port: 15443
            targetPort: 15443
      
      istio-egressgateway:
        enabled: true
        autoscaleEnabled: true
        autoscaleMin: 1
        autoscaleMax: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
    
    # 📊 Telemetry Configuration
    telemetry:
      enabled: true
      v2:
        enabled: true
        metadata:
          enabled: true
        prometheus:
          enabled: true
          enabledMetrics:
          - http_requests_total
          - http_request_duration_seconds
          - http_request_size_bytes
          - http_response_size_bytes
          - tcp_connections_opened_total
          - tcp_connections_closed_total
        stackdriver:
          enabled: false
        accessLogPolicy:
          enabled: true
          filter:
            expression: "response.code >= 400"
    
    # 🔍 Tracing Configuration
    tracing:
      enabled: true
      provider: jaeger
      jaeger:
        enabled: true
        hub: docker.io/jaegertracing
        tag: 1.42
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
    
    # 📈 Kiali Configuration
    kiali:
      enabled: true
      hub: quay.io/kiali
      tag: v1.73
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
      dashboard:
        auth:
          strategy: token
      prometheus:
        url: http://prometheus-operated.prometheus.svc:9090
      grafana:
        url: http://grafana.grafana.svc:80
    
    # 🔐 Cert Manager Integration
    certmanager:
      enabled: false
    
    # 🎨 Sidecar Injection
    sidecarInjectorWebhook:
      enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
    
    # 🔧 Node Agent Configuration
    nodeagent:
      enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
    
    # 🚫 Policy Configuration
    policy:
      enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
    
    # 🔄 Citadel Configuration
    citadel:
      enabled: true
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
