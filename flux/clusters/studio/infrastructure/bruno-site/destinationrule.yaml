# apiVersion: networking.istio.io/v1beta1
# kind: DestinationRule
# metadata:
#   name: bruno-site
#   namespace: bruno
# spec:
#   # 🎯 Destination Rule for Blue/Green Deployments
#   # 🔄 Traffic Splitting and Load Balancing
  
#   # 🌐 Host Configuration
#   host: bruno-site.bruno.svc.cluster.local
  
#   # 🔄 Traffic Policy
#   trafficPolicy:
#     # 🔐 TLS Configuration
#     tls:
#       mode: ISTIO_MUTUAL
#       sni: bruno-site.bruno.svc.cluster.local
    
#     # 🔄 Connection Pool Configuration
#     connectionPool:
#       http:
#         http1MaxPendingRequests: 1024
#         maxRequestsPerConnection: 10
#         maxRetries: 3
#         idleTimeout: 1h
#       tcp:
#         maxConnections: 100
#         connectTimeout: 30s
#         tcpKeepalive:
#           time: 7200s
#           interval: 75s
#           probes: 9
    
#     # 🔄 Outlier Detection
#     outlierDetection:
#       consecutive5xxErrors: 5
#       interval: 30s
#       baseEjectionTime: 30s
#       maxEjectionPercent: 10
#       minHealthPercent: 50
  
#   # 🎨 Subsets for Blue/Green Traffic
#   subsets:
#   # 🔵 Blue Environment (Current Production)
#   - name: blue
#     labels:
#       version: blue
#       environment: production
#     trafficPolicy:
#       loadBalancer:
#         simple: ROUND_ROBIN
#       connectionPool:
#         http:
#           maxRequestsPerConnection: 10
#           maxRetries: 3
#       outlierDetection:
#         consecutive5xxErrors: 3
#         interval: 30s
#         baseEjectionTime: 30s
  
#   # 🟢 Green Environment (New Deployment)
#   - name: green
#     labels:
#       version: green
#       environment: staging
#     trafficPolicy:
#       loadBalancer:
#         simple: ROUND_ROBIN
#       connectionPool:
#         http:
#           maxRequestsPerConnection: 10
#           maxRetries: 3
#       outlierDetection:
#         consecutive5xxErrors: 2
#         interval: 15s
#         baseEjectionTime: 15s
  
#   # 🔄 Canary Environment (Testing)
#   - name: canary
#     labels:
#       version: canary
#       environment: testing
#     trafficPolicy:
#       loadBalancer:
#         simple: LEAST_CONN
#       connectionPool:
#         http:
#           maxRequestsPerConnection: 5
#           maxRetries: 1
#       outlierDetection:
#         consecutive5xxErrors: 1
#         interval: 10s
#         baseEjectionTime: 10s
