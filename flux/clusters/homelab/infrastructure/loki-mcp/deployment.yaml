apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-mcp-server
  namespace: loki
  labels:
    app.kubernetes.io/name: loki-mcp
    app.kubernetes.io/component: mcp-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-mcp
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki-mcp
        app.kubernetes.io/component: mcp-server
    spec:
      containers:
      - name: loki-mcp-server
        image: grafana/loki-mcp:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: mcp
          protocol: TCP
        env:
        - name: LOKI_URL
          valueFrom:
            configMapKeyRef:
              name: loki-mcp-config
              key: LOKI_URL
        - name: LOKI_ORG_ID
          valueFrom:
            configMapKeyRef:
              name: loki-mcp-config
              key: LOKI_ORG_ID
        - name: SSE_PORT
          valueFrom:
            configMapKeyRef:
              name: loki-mcp-config
              key: SSE_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: loki-mcp-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
