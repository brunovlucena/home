apiVersion: apps/v1
kind: Deployment
metadata:
  name: langgraph-agent
  namespace: langgraph-agent
  labels:
    app.kubernetes.io/name: langgraph-agent
    app.kubernetes.io/component: ai-agent
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: langgraph-agent
      app.kubernetes.io/component: ai-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: langgraph-agent
        app.kubernetes.io/component: ai-agent
    spec:
      imagePullSecrets:
        - name: ghcr-secret
      containers:
      - name: langgraph-agent
        image: ghcr.io/brunovlucena/langgraph-agent:dev
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: OLLAMA_URL
          valueFrom:
            configMapKeyRef:
              name: langgraph-agent-config
              key: OLLAMA_URL
        - name: MODEL_NAME
          valueFrom:
            configMapKeyRef:
              name: langgraph-agent-config
              key: MODEL_NAME
        - name: LOKI_URL
          valueFrom:
            configMapKeyRef:
              name: langgraph-agent-config
              key: LOKI_URL
        - name: AGENT_PORT
          valueFrom:
            configMapKeyRef:
              name: langgraph-agent-config
              key: AGENT_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: langgraph-agent-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      restartPolicy: Always
