---
# Test Pod to validate mock services
apiVersion: v1
kind: Pod
metadata:
  name: test-infrastructure-validator
  namespace: mocks
  labels:
    app.kubernetes.io/name: test-validator-test
    app.kubernetes.io/component: test
spec:
  containers:
  - name: validator
    image: alpine:3.18
    command: ["/bin/sh"]
    args:
    - -c
    - |
      apk add --no-cache curl
      echo "Starting infrastructure validation tests..."
      
      # Test Gateway Services
      echo "Testing Gateway Services..."
      curl -f http://mock-management-gateway:5000/health || echo "Management Gateway health check failed"
      curl -f http://mock-dataplane-gateway:80/health || echo "Dataplane Gateway health check failed"
      
      # Test Manager Services (gRPC)
      echo "Testing Manager Services..."
      curl -f http://mock-user-manager:6000/health || echo "User Manager health check failed"
      curl -f http://mock-template-manager:6000/health || echo "Template Manager health check failed"
      curl -f http://mock-tenant-manager:6000/health || echo "Tenant Manager health check failed"
      curl -f http://mock-blockchain-manager:6000/health || echo "Blockchain Manager health check failed"
      curl -f http://mock-chat-manager:6000/health || echo "Chat Manager health check failed"
      curl -f http://mock-storage-manager:6000/health || echo "Storage Manager health check failed"
      curl -f http://mock-fusion-manager:6000/health || echo "Fusion Manager health check failed"
      curl -f http://mock-subscription-manager:6000/health || echo "Subscription Manager health check failed"
      curl -f http://mock-points-manager:6000/health || echo "Points Manager health check failed"
      
      # Test Messenger Services
      echo "Testing Messenger Services..."
      curl -f http://mock-mailer:5000/health || echo "Mailer health check failed"
      curl -f http://mock-sms-messenger:5000/health || echo "SMS Messenger health check failed"
      curl -f http://mock-telegram-messenger:5000/health || echo "Telegram Messenger health check failed"
      curl -f http://mock-fcm-messenger:5000/health || echo "FCM Messenger health check failed"
      curl -f http://mock-discord-messenger:5000/health || echo "Discord Messenger health check failed"
      curl -f http://mock-slack-channel-messenger:5000/health || echo "Slack Channel Messenger health check failed"
      curl -f http://mock-web-push-messenger:5000/health || echo "Web Push Messenger health check failed"
      curl -f http://mock-web3-messenger:5000/health || echo "Web3 Messenger health check failed"
      curl -f http://mock-webhook-sender:5000/health || echo "Webhook Sender health check failed"
      
      # Test Proxy Services
      echo "Testing Proxy Services..."
      curl -f http://mock-evm-proxy:7000/health || echo "EVM Proxy health check failed"
      curl -f http://mock-solana-proxy:7000/health || echo "Solana Proxy health check failed"
      curl -f http://mock-aptos-proxy:7000/health || echo "Aptos Proxy health check failed"
      curl -f http://mock-sui-proxy:7000/health || echo "SUI Proxy health check failed"
      curl -f http://mock-cosmos-proxy:7000/health || echo "Cosmos Proxy health check failed"
      curl -f http://mock-btc-proxy:7000/health || echo "BTC Proxy health check failed"
      curl -f http://mock-xmtp-proxy:5000/health || echo "XMTP Proxy health check failed"
      curl -f http://mock-rpc-proxy:80/health || echo "RPC Proxy health check failed"
      curl -f http://mock-fetch-proxy:4000/health || echo "Fetch Proxy health check failed"
      
      # Test Infrastructure Services
      echo "Testing Infrastructure Services..."
      curl -f http://mock-clickhouse:8123/ping || echo "ClickHouse health check failed"
      curl -f http://mock-internal-cache:6379/ping || echo "Internal Cache health check failed"
      curl -f http://mock-monitor:5000/health || echo "Monitor health check failed"
      curl -f http://mock-scheduler:4000/health || echo "Scheduler health check failed"
      curl -f http://mock-event-processor:5000/health || echo "Event Processor health check failed"
      curl -f http://mock-rate-limit-broker:4000/health || echo "Rate Limit Broker health check failed"
      curl -f http://mock-callback-handler:5000/health || echo "Callback Handler health check failed"
      curl -f http://mock-outpost-service:5000/health || echo "Outpost Service health check failed"
      
      # Test Metrics Endpoints
      echo "Testing Metrics Endpoints..."
      curl -f http://mock-management-gateway:7000/metrics || echo "Management Gateway metrics failed"
      curl -f http://mock-user-manager:7000/metrics || echo "User Manager metrics failed"
      curl -f http://mock-mailer:7000/metrics || echo "Mailer metrics failed"
      curl -f http://mock-evm-proxy:7000/metrics || echo "EVM Proxy metrics failed"
      curl -f http://mock-monitor:7000/metrics || echo "Monitor metrics failed"
      
      echo "Infrastructure validation tests completed!"
  restartPolicy: Never

---
# Test Job to validate service connectivity
apiVersion: batch/v1
kind: Job
metadata:
  name: test-service-connectivity
  namespace: mocks
  labels:
    app.kubernetes.io/name: connectivity-test-test
    app.kubernetes.io/component: test
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: connectivity-test-test
        app.kubernetes.io/component: test
    spec:
      containers:
      - name: connectivity-test
        image: alpine:3.18
        command: ["/bin/sh"]
        args:
        - -c
        - |
          apk add --no-cache curl
          echo "Testing service connectivity..."
          
          # Test internal service communication
          echo "Testing internal service communication..."
          
          # Gateway to Manager communication
          curl -f http://mock-management-gateway:5000/api/v1/users || echo "Gateway to User Manager communication failed"
          curl -f http://mock-management-gateway:5000/api/v1/templates || echo "Gateway to Template Manager communication failed"
          
          # Manager to Messenger communication
          curl -f http://mock-user-manager:4000/grpc || echo "User Manager gRPC endpoint failed"
          curl -f http://mock-template-manager:4000/grpc || echo "Template Manager gRPC endpoint failed"
          
          # Messenger to Proxy communication
          curl -f http://mock-sms-messenger:5000/send || echo "SMS Messenger send endpoint failed"
          curl -f http://mock-telegram-messenger:5000/send || echo "Telegram Messenger send endpoint failed"
          
          # Proxy to External communication
          curl -f http://mock-evm-proxy:7000/rpc || echo "EVM Proxy RPC endpoint failed"
          curl -f http://mock-solana-proxy:7000/rpc || echo "Solana Proxy RPC endpoint failed"
          
          # Infrastructure service communication
          curl -f http://mock-clickhouse:8123/ || echo "ClickHouse HTTP endpoint failed"
          curl -f http://mock-monitor:5000/status || echo "Monitor status endpoint failed"
          
          echo "Service connectivity tests completed!"
      restartPolicy: Never
  backoffLimit: 3

---
# Test Pod to validate resource limits
apiVersion: v1
kind: Pod
metadata:
  name: test-resource-validation
  namespace: mocks
  labels:
    app.kubernetes.io/name: resource-validator-test
    app.kubernetes.io/component: test
spec:
  containers:
  - name: resource-validator
    image: alpine:3.18
    command: ["/bin/sh"]
    args:
    - -c
    - |
      apk add --no-cache curl
      echo "Validating resource configurations..."
      
      # Check if services are running with correct resource limits
      echo "Checking service resource usage..."
      
      # Test memory limits by making multiple requests
      for i in {1..10}; do
        curl -f http://mock-management-gateway:5000/health || echo "Request $i failed"
        curl -f http://mock-user-manager:6000/health || echo "Request $i failed"
        curl -f http://mock-mailer:5000/health || echo "Request $i failed"
        curl -f http://mock-evm-proxy:7000/health || echo "Request $i failed"
      done
      
      echo "Resource validation tests completed!"
  restartPolicy: Never

---
# Test Pod to validate port configurations
apiVersion: v1
kind: Pod
metadata:
  name: test-port-validation
  namespace: mocks
  labels:
    app.kubernetes.io/name: port-validator-test
    app.kubernetes.io/component: test
spec:
  containers:
  - name: port-validator
    image: alpine:3.18
    command: ["/bin/sh"]
    args:
    - -c
    - |
      apk add --no-cache curl
      echo "Validating port configurations..."
      
      # Test all configured ports
      echo "Testing HTTP ports (5000)..."
      curl -f http://mock-management-gateway:5000/health || echo "Port 5000 test failed"
      curl -f http://mock-mailer:5000/health || echo "Port 5000 test failed"
      
      echo "Testing gRPC ports (4000)..."
      curl -f http://mock-user-manager:4000/grpc || echo "Port 4000 test failed"
      curl -f http://mock-template-manager:4000/grpc || echo "Port 4000 test failed"
      
      echo "Testing health ports (6000)..."
      curl -f http://mock-management-gateway:6000/health || echo "Port 6000 test failed"
      curl -f http://mock-user-manager:6000/health || echo "Port 6000 test failed"
      
      echo "Testing metrics ports (7000)..."
      curl -f http://mock-management-gateway:7000/metrics || echo "Port 7000 test failed"
      curl -f http://mock-evm-proxy:7000/metrics || echo "Port 7000 test failed"
      
      echo "Testing special ports..."
      curl -f http://mock-dataplane-gateway:80/health || echo "Port 80 test failed"
      curl -f http://mock-rpc-proxy:80/health || echo "Port 80 test failed"
      curl -f http://mock-clickhouse:8123/ping || echo "Port 8123 test failed"
      curl -f http://mock-internal-cache:6379/ping || echo "Port 6379 test failed"
      
      echo "Port validation tests completed!"
  restartPolicy: Never