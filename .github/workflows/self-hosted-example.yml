name: 🏃‍♂️ Self-Hosted Runner Example

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # Use self-hosted runners to keep data private
  RUNNER_LABELS: "self-hosted,linux,x64,home-infrastructure"

jobs:
  # Example job using self-hosted runners
  build-and-test:
    name: 🏗️ Build and Test
    runs-on: [self-hosted, linux, x64, home-infrastructure]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 🔍 Show runner information
        run: |
          echo "🏃‍♂️ Running on self-hosted runner"
          echo "📍 Runner OS: $(uname -a)"
          echo "💾 Available disk space:"
          df -h
          echo "🧠 Available memory:"
          free -h
          echo "🔧 Docker version:"
          docker --version
          echo "🐍 Python version:"
          python3 --version || echo "Python not available"
          echo "🦀 Rust version:"
          rustc --version || echo "Rust not available"
          echo "🟢 Go version:"
          go version || echo "Go not available"
          echo "📦 Node.js version:"
          node --version || echo "Node.js not available"
      
      - name: 🏗️ Build infrastructure
        run: |
          echo "🏗️ Building infrastructure components..."
          # Example build commands
          echo "✅ Infrastructure build completed"
      
      - name: 🧪 Run tests
        run: |
          echo "🧪 Running tests..."
          # Example test commands
          echo "✅ All tests passed"
      
      - name: 📊 Generate build report
        run: |
          echo "📊 Generating build report..."
          cat > build-report.md << EOF
          # Build Report
          
          **Date**: $(date)
          **Runner**: Self-hosted (Home Infrastructure)
          **OS**: $(uname -s)
          **Architecture**: $(uname -m)
          
          ## Build Status
          - ✅ Infrastructure build: Success
          - ✅ Tests: Passed
          - ✅ Security scan: Clean
          
          ## Resource Usage
          - **CPU**: $(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$3+$4)} END {print usage "%"}')
          - **Memory**: $(free | grep Mem | awk '{printf "%.1f%%", $3/$2 * 100.0}')
          - **Disk**: $(df -h / | awk 'NR==2{printf "%s", $5}')
          
          ## Privacy Notice
          🛡️ This build was executed on a self-hosted runner in your home infrastructure.
          Your code and build artifacts remain private and are not used for training purposes.
          EOF
          
          echo "📄 Build report generated"
          cat build-report.md
      
      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-report
          path: build-report.md
          retention-days: 30

  # Example job for container builds
  container-build:
    name: 🐳 Container Build
    runs-on: [self-hosted, linux, x64, home-infrastructure]
    needs: build-and-test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐳 Build container image
        run: |
          echo "🐳 Building container image..."
          # Example container build
          docker build -t home-infrastructure:latest .
          echo "✅ Container build completed"
      
      - name: 🏷️ Tag container image
        run: |
          echo "🏷️ Tagging container image..."
          docker tag home-infrastructure:latest home-infrastructure:$(date +%Y%m%d-%H%M%S)
          docker tag home-infrastructure:latest home-infrastructure:latest
          echo "✅ Container image tagged"
      
      - name: 📊 Show container information
        run: |
          echo "📊 Container information:"
          docker images home-infrastructure
          docker inspect home-infrastructure:latest | jq '.[0].Config.Labels' || echo "No labels found"

  # Example job for security scanning
  security-scan:
    name: 🔒 Security Scan
    runs-on: [self-hosted, linux, x64, home-infrastructure]
    needs: build-and-test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🔒 Run security scan
        run: |
          echo "🔒 Running security scan..."
          # Example security scan commands
          echo "🔍 Scanning for vulnerabilities..."
          echo "✅ Security scan completed - No issues found"
      
      - name: 📊 Generate security report
        run: |
          cat > security-report.md << EOF
          # Security Scan Report
          
          **Date**: $(date)
          **Scanner**: Self-hosted security tools
          **Status**: ✅ Clean
          
          ## Scan Results
          - ✅ No critical vulnerabilities found
          - ✅ No high-severity issues detected
          - ✅ Dependencies are up to date
          - ✅ No secrets detected in code
          
          ## Privacy Notice
          🛡️ This security scan was performed on your self-hosted infrastructure.
          All scan data remains private and is not shared with external services.
          EOF
          
          echo "📄 Security report generated"
          cat security-report.md
      
      - name: 📤 Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
          retention-days: 90

  # Example job for deployment
  deploy:
    name: 🚀 Deploy
    runs-on: [self-hosted, linux, x64, home-infrastructure]
    needs: [build-and-test, container-build, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🚀 Deploy to home infrastructure
        run: |
          echo "🚀 Deploying to home infrastructure..."
          # Example deployment commands
          echo "📦 Deploying infrastructure components..."
          echo "🔄 Updating services..."
          echo "✅ Deployment completed successfully"
      
      - name: 🔍 Verify deployment
        run: |
          echo "🔍 Verifying deployment..."
          # Example verification commands
          echo "✅ Deployment verification completed"
      
      - name: 📊 Generate deployment report
        run: |
          cat > deployment-report.md << EOF
          # Deployment Report
          
          **Date**: $(date)
          **Environment**: Home Infrastructure
          **Status**: ✅ Success
          
          ## Deployment Summary
          - ✅ Infrastructure components deployed
          - ✅ Services updated successfully
          - ✅ Health checks passed
          - ✅ Monitoring configured
          
          ## Privacy Notice
          🛡️ This deployment was executed on your self-hosted infrastructure.
          All deployment data and logs remain private and secure.
          EOF
          
          echo "📄 Deployment report generated"
          cat deployment-report.md
      
      - name: 📤 Upload deployment report
        uses: actions/upload-artifact@v4
        with:
          name: deployment-report
          path: deployment-report.md
          retention-days: 30

  # Example job for cleanup
  cleanup:
    name: 🧹 Cleanup
    runs-on: [self-hosted, linux, x64, home-infrastructure]
    needs: [build-and-test, container-build, security-scan, deploy]
    if: always()
    
    steps:
      - name: 🧹 Cleanup resources
        run: |
          echo "🧹 Cleaning up resources..."
          # Example cleanup commands
          echo "🗑️ Removing temporary files..."
          echo "💾 Cleaning up Docker images..."
          echo "✅ Cleanup completed"
      
      - name: 📊 Generate cleanup report
        run: |
          cat > cleanup-report.md << EOF
          # Cleanup Report
          
          **Date**: $(date)
          **Status**: ✅ Completed
          
          ## Cleanup Summary
          - ✅ Temporary files removed
          - ✅ Docker images cleaned up
          - ✅ Build artifacts archived
          - ✅ Logs rotated
          
          ## Privacy Notice
          🛡️ All cleanup operations were performed on your self-hosted infrastructure.
          No data was transmitted to external services.
          EOF
          
          echo "📄 Cleanup report generated"
          cat cleanup-report.md
      
      - name: 📤 Upload cleanup report
        uses: actions/upload-artifact@v4
        with:
          name: cleanup-report
          path: cleanup-report.md
          retention-days: 7
