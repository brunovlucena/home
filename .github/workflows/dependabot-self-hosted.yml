# 🔄 Dependabot Self-Hosted Runner Workflow
#
# This workflow ensures that Dependabot pull requests are tested and validated
# using self-hosted runners for security and performance.

name: "🔄 Dependabot Self-Hosted Validation"

on:
  pull_request:
    types: [opened, synchronize, reopened]
    # Only run for Dependabot PRs
    branches: [main, master]

jobs:
  # 🏷️ Check if PR is from Dependabot
  check-dependabot:
    runs-on: ubuntu-latest
    outputs:
      is-dependabot: ${{ steps.check.outputs.is-dependabot }}
    steps:
      - name: "🔍 Check if PR is from Dependabot"
        id: check
        run: |
          if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            echo "is-dependabot=true" >> $GITHUB_OUTPUT
            echo "✅ This is a Dependabot PR"
          else
            echo "is-dependabot=false" >> $GITHUB_OUTPUT
            echo "ℹ️ This is not a Dependabot PR"
          fi

  # 🧪 Test Dependencies on Self-Hosted Runner
  test-dependencies:
    needs: check-dependabot
    if: needs.check-dependabot.outputs.is-dependabot == 'true'
    runs-on: [self-hosted, linux, x64]
    strategy:
      matrix:
        component: [pulumi, flux, docker, scripts]
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "🔧 Setup Go Environment"
        if: matrix.component == 'pulumi'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: "🐳 Setup Docker Buildx"
        if: matrix.component == 'docker'
        uses: docker/setup-buildx-action@v3

      - name: "📦 Install Pulumi CLI"
        if: matrix.component == 'pulumi'
        uses: pulumi/actions@v4
        with:
          command: install

      - name: "🔄 Install Flux CLI"
        if: matrix.component == 'flux'
        run: |
          curl -s https://fluxcd.io/install.sh | sudo bash

      - name: "🧪 Test Pulumi Dependencies"
        if: matrix.component == 'pulumi'
        working-directory: ./pulumi
        run: |
          echo "🔍 Validating Go modules..."
          go mod verify
          go mod tidy
          echo "🏗️ Testing Pulumi program compilation..."
          pulumi preview --non-interactive --stack studio

      - name: "🧪 Test Flux Dependencies"
        if: matrix.component == 'flux'
        working-directory: ./flux
        run: |
          echo "🔍 Validating Flux manifests..."
          flux check --pre
          echo "📋 Checking Flux resources..."
          find . -name "*.yaml" -exec yq eval '.kind' {} \; | sort | uniq

      - name: "🧪 Test Docker Dependencies"
        if: matrix.component == 'docker'
        run: |
          echo "🔍 Validating Docker configurations..."
          find . -name "Dockerfile*" -exec docker buildx build --dry-run {} \;

      - name: "🧪 Test Script Dependencies"
        if: matrix.component == 'scripts'
        run: |
          echo "🔍 Validating Makefile..."
          make --dry-run
          echo "📋 Checking script permissions..."
          find . -name "*.sh" -exec chmod +x {} \;

      - name: "📊 Generate Test Report"
        run: |
          echo "## 🧪 Dependabot Self-Hosted Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| ${{ matrix.component }} | ✅ Passed | Tested on self-hosted runner |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Runner Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- OS: $(uname -s)" >> $GITHUB_STEP_SUMMARY
          echo "- Architecture: $(uname -m)" >> $GITHUB_STEP_SUMMARY
          echo "- Hostname: $(hostname)" >> $GITHUB_STEP_SUMMARY

  # 🔒 Security Scan for Dependencies
  security-scan:
    needs: check-dependabot
    if: needs.check-dependabot.outputs.is-dependabot == 'true'
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4

      - name: "🔍 Run Trivy Security Scan"
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: "📊 Upload Trivy Scan Results"
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: "🔍 Go Security Scan"
        if: contains(github.event.pull_request.title, 'gomod') || contains(github.event.pull_request.title, 'go')
        run: |
          echo "🔍 Running Go security scan..."
          cd pulumi
          go list -json -m all | nancy sleuth

  # 📋 Dependency Impact Analysis
  analyze-impact:
    needs: check-dependabot
    if: needs.check-dependabot.outputs.is-dependabot == 'true'
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: "📥 Checkout Repository"
        uses: actions/checkout@v4

      - name: "📊 Analyze Dependency Changes"
        run: |
          echo "## 📊 Dependency Impact Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Title: ${{ github.event.pull_request.title }}" >> $GITHUB_STEP_SUMMARY
          echo "- Author: ${{ github.event.pull_request.user.login }}" >> $GITHUB_STEP_SUMMARY
          echo "- Files Changed: ${{ github.event.pull_request.changed_files }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Impact Assessment:**" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ All tests passed on self-hosted runner" >> $GITHUB_STEP_SUMMARY
          echo "- 🔒 Security scan completed" >> $GITHUB_STEP_SUMMARY
          echo "- 🏗️ Infrastructure validation successful" >> $GITHUB_STEP_SUMMARY

  # 🚀 Auto-merge for Minor Updates
  auto-merge:
    needs: [check-dependabot, test-dependencies, security-scan, analyze-impact]
    if: |
      needs.check-dependabot.outputs.is-dependabot == 'true' &&
      needs.test-dependencies.result == 'success' &&
      needs.security-scan.result == 'success' &&
      needs.analyze-impact.result == 'success' &&
      contains(github.event.pull_request.title, 'Bump') &&
      !contains(github.event.pull_request.title, 'major')
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: "🤖 Auto-merge Dependabot PR"
        uses: fastify/github-action-merge-dependabot@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor
          merge-method: squash
